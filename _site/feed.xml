<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-10-31T23:35:24+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">路过音乐的博客</title><author><name>true</name></author><entry><title type="html">Linux常用命令大全（转）</title><link href="http://localhost:4000/otherclassical/2018/10/30/linux.html" rel="alternate" type="text/html" title="Linux常用命令大全（转）" /><published>2018-10-30T00:00:00+08:00</published><updated>2018-10-30T00:00:00+08:00</updated><id>http://localhost:4000/otherclassical/2018/10/30/linux</id><content type="html" xml:base="http://localhost:4000/otherclassical/2018/10/30/linux.html">&lt;p&gt;常和ubuntu打交道，但是有些命令还是记不住，老是需要去查，现在网上找到一份常用命令和解释，以作参考：&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;系统信息&lt;/strong&gt; &lt;br /&gt; 
arch 显示机器的处理器架构(1)&lt;br /&gt; 
uname -m 显示机器的处理器架构(2)&lt;br /&gt; 
uname -r 显示正在使用的内核版本 &lt;br /&gt;
dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) &lt;br /&gt;
hdparm -i /dev/hda 罗列一个磁盘的架构特性&lt;br /&gt; 
hdparm -tT /dev/sda 在磁盘上执行测试性读取操作&lt;br /&gt; 
cat /proc/cpuinfo 显示CPU info的信息&lt;br /&gt; 
cat /proc/interrupts 显示中断 &lt;br /&gt;
cat /proc/meminfo 校验内存使用 &lt;br /&gt;
cat /proc/swaps 显示哪些swap被使用 &lt;br /&gt;
cat /proc/version 显示内核的版本 &lt;br /&gt;
cat /proc/net/dev 显示网络适配器及统计 &lt;br /&gt;
cat /proc/mounts 显示已加载的文件系统 &lt;br /&gt;
lspci -tv 罗列 PCI 设备 &lt;br /&gt;
lsusb -tv 显示 USB 设备 &lt;br /&gt;
date 显示系统日期 &lt;br /&gt;
cal 2007 显示2007年的日历表 &lt;br /&gt;
date 041217002007.00 设置日期和时间 - 月日时分年.秒 &lt;br /&gt;
clock -w 将时间修改保存到 BIOS &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关机 (系统的关机、重启以及登出 )&lt;/strong&gt;&lt;br /&gt;
shutdown -h now 关闭系统(1) &lt;br /&gt;
init 0 关闭系统(2) &lt;br /&gt;
telinit 0 关闭系统(3) &lt;br /&gt;
shutdown -h hours:minutes &amp;amp; 按预定时间关闭系统 &lt;br /&gt;
shutdown -c 取消按预定时间关闭系统 &lt;br /&gt;
shutdown -r now 重启(1) &lt;br /&gt;
reboot 重启(2) &lt;br /&gt;
logout 注销 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文件和目录&lt;/strong&gt; &lt;br /&gt;
cd /home 进入 ‘/ home’ 目录’ &lt;br /&gt;
cd .. 返回上一级目录 &lt;br /&gt;
cd ../.. 返回上两级目录 &lt;br /&gt;
cd 进入个人的主目录 &lt;br /&gt;
cd ~user1 进入个人的主目录 &lt;br /&gt;
cd - 返回上次所在的目录 &lt;br /&gt;
pwd 显示工作路径 &lt;br /&gt;
ls 查看目录中的文件 &lt;br /&gt;
ls -F 查看目录中的文件 &lt;br /&gt;
ls -l 显示文件和目录的详细资料 &lt;br /&gt;
ls -a 显示隐藏文件 &lt;br /&gt;
ls &lt;em&gt;[0-9]&lt;/em&gt; 显示包含数字的文件名和目录名 &lt;br /&gt;
tree 显示文件和目录由根目录开始的树形结构(1) &lt;br /&gt;
lstree 显示文件和目录由根目录开始的树形结构(2) &lt;br /&gt;
mkdir dir1 创建一个叫做 ‘dir1’ 的目录’ &lt;br /&gt;
mkdir dir1 dir2 同时创建两个目录 &lt;br /&gt;
mkdir -p /tmp/dir1/dir2 创建一个目录树 &lt;br /&gt;
rm -f file1 删除一个叫做 ‘file1’ 的文件’ &lt;br /&gt;
rmdir dir1 删除一个叫做 ‘dir1’ 的目录’ &lt;br /&gt;
rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容 &lt;br /&gt;
rm -rf dir1 dir2 同时删除两个目录及它们的内容 &lt;br /&gt;
mv dir1 new_dir 重命名/移动 一个目录 &lt;br /&gt;
cp file1 file2 复制一个文件 &lt;br /&gt;
cp dir/* . 复制一个目录下的所有文件到当前工作目录 &lt;br /&gt;
cp -a /tmp/dir1 . 复制一个目录到当前工作目录 &lt;br /&gt;
cp -a dir1 dir2 复制一个目录 &lt;br /&gt;
ln -s file1 lnk1 创建一个指向文件或目录的软链接 &lt;br /&gt;
ln file1 lnk1 创建一个指向文件或目录的物理链接 &lt;br /&gt;
touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm) &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文件搜索&lt;/strong&gt; &lt;br /&gt;
find / -name file1 从 ‘/’ 开始进入根文件系统搜索文件和目录 &lt;br /&gt;
find / -user user1 搜索属于用户 ‘user1’ 的文件和目录 &lt;br /&gt;
find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件 &lt;br /&gt;
find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 &lt;br /&gt;
find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 &lt;br /&gt;
find / -name *.rpm -exec chmod 755 ‘{}’ \; 搜索以 ‘.rpm’ 结尾的文件并定义其权限 &lt;br /&gt;
find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备 &lt;br /&gt;
locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 &lt;br /&gt;
whereis halt 显示一个二进制文件、源码或man的位置 &lt;br /&gt;
which halt 显示一个二进制文件或可执行文件的完整路径 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;挂载一个文件系统&lt;/strong&gt; &lt;br /&gt;
mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在 &lt;br /&gt;
umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出 &lt;br /&gt;
fuser -km /mnt/hda2 当设备繁忙时强制卸载 &lt;br /&gt;
umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用 &lt;br /&gt;
mount /dev/fd0 /mnt/floppy 挂载一个软盘 &lt;br /&gt;
mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom &lt;br /&gt;
mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom &lt;br /&gt;
mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom &lt;br /&gt;
mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件 &lt;br /&gt;
mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统 &lt;br /&gt;
mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备 &lt;br /&gt;
mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;磁盘空间&lt;/strong&gt; &lt;br /&gt;
df -h 显示已经挂载的分区列表 &lt;br /&gt;
ls -lSr |more 以尺寸大小排列文件和目录 &lt;br /&gt;
du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’ &lt;br /&gt;
du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小 &lt;br /&gt;
rpm -q -a –qf ‘%10{SIZE}t%{NAME}n’ | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统) &lt;br /&gt;
dpkg-query -W -f=’${Installed-Size;10}t${Package}n’ | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统) &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用户和群组&lt;/strong&gt; &lt;br /&gt;
groupadd group_name 创建一个新用户组 &lt;br /&gt;
groupdel group_name 删除一个用户组 &lt;br /&gt;
groupmod -n new_group_name old_group_name 重命名一个用户组 &lt;br /&gt;
useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户 &lt;br /&gt;
useradd user1 创建一个新用户 &lt;br /&gt;
userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录) &lt;br /&gt;
usermod -c “User FTP” -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性 &lt;br /&gt;
passwd 修改口令 &lt;br /&gt;
passwd user1 修改一个用户的口令 (只允许root执行) &lt;br /&gt;
chage -E 2005-12-31 user1 设置用户口令的失效期限 &lt;br /&gt;
pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户 &lt;br /&gt;
grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组 &lt;br /&gt;
newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文件的权限&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;使用 “+” 设置权限，使用 “-“ 用于取消 &lt;br /&gt;
ls -lh 显示权限 &lt;br /&gt;
ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示 &lt;br /&gt;
chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限 &lt;br /&gt;
chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限 &lt;br /&gt;
chown user1 file1 改变一个文件的所有人属性 &lt;br /&gt;
chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性 &lt;br /&gt;
chgrp group1 file1 改变文件的群组 &lt;br /&gt;
chown user1:group1 file1 改变一个文件的所有人和群组属性 &lt;br /&gt;
find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件 &lt;br /&gt;
chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 &lt;br /&gt;
chmod u-s /bin/file1 禁用一个二进制文件的 SUID位 &lt;br /&gt;
chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的 &lt;br /&gt;
chmod g-s /home/public 禁用一个目录的 SGID 位 &lt;br /&gt;
chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 &lt;br /&gt;
chmod o-t /home/public 禁用一个目录的 STIKY 位 &lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;文件的特殊属性&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;使用 “+” 设置权限，使用 “-“ 用于取消 &lt;br /&gt;
chattr +a file1 只允许以追加方式读写文件 &lt;br /&gt;
chattr +c file1 允许这个文件能被内核自动压缩/解压 &lt;br /&gt;
chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件 &lt;br /&gt;
chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接 &lt;br /&gt;
chattr +s file1 允许一个文件被安全地删除 &lt;br /&gt;
chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 &lt;br /&gt;
chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件 &lt;br /&gt;
lsattr 显示特殊的属性 &lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;打包和压缩文件&lt;/strong&gt; &lt;br /&gt;
bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件 &lt;br /&gt;
bzip2 file1 压缩一个叫做 ‘file1’ 的文件 &lt;br /&gt;
gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件 &lt;br /&gt;
gzip file1 压缩一个叫做 ‘file1’的文件 &lt;br /&gt;
gzip -9 file1 最大程度压缩 &lt;br /&gt;
rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包 &lt;br /&gt;
rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’ &lt;br /&gt;
rar x file1.rar 解压rar包 &lt;br /&gt;
unrar x file1.rar 解压rar包 &lt;br /&gt;
tar -cvf archive.tar file1 创建一个非压缩的 tarball &lt;br /&gt;
tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件 &lt;br /&gt;
tar -tf archive.tar 显示一个包中的内容 &lt;br /&gt;
tar -xvf archive.tar 释放一个包 &lt;br /&gt;
tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下 &lt;br /&gt;
tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包 &lt;br /&gt;
tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包 &lt;br /&gt;
tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包 &lt;br /&gt;
tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包 
zip file1.zip file1 创建一个zip格式的压缩包 &lt;br /&gt;
zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包 &lt;br /&gt;
unzip file1.zip 解压一个zip格式压缩包 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RPM 包&lt;/strong&gt; - （Fedora, Redhat及类似系统） &lt;br /&gt;
rpm -ivh package.rpm 安装一个rpm包 &lt;br /&gt;
rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告 &lt;br /&gt;
rpm -U package.rpm 更新一个rpm包但不改变其配置文件 &lt;br /&gt;
rpm -F package.rpm 更新一个确定已经安装的rpm包 
rpm -e package_name.rpm 删除一个rpm包 &lt;br /&gt;
rpm -qa 显示系统中所有已经安装的rpm包 &lt;br /&gt;
rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包 &lt;br /&gt;
rpm -qi package_name 获取一个已安装包的特殊信息 &lt;br /&gt;
rpm -qg “System Environment/Daemons” 显示一个组件的rpm包 &lt;br /&gt;
rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表 &lt;br /&gt;
rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表 &lt;br /&gt;
rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表 &lt;br /&gt;
rpm -q package_name –whatprovides 显示一个rpm包所占的体积 &lt;br /&gt;
rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l &lt;br /&gt;
rpm -q package_name –changelog 显示一个rpm包的修改历史 &lt;br /&gt;
rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供 &lt;br /&gt;
rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表 &lt;br /&gt;
rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书 &lt;br /&gt;
rpm –checksig package.rpm 确认一个rpm包的完整性 &lt;br /&gt;
rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性 &lt;br /&gt;
rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间 &lt;br /&gt;
rpm -Va 检查系统中所有已安装的rpm包- 小心使用 &lt;br /&gt;
rpm -Vp package.rpm 确认一个rpm包还未安装 &lt;br /&gt;
rpm2cpio package.rpm | cpio –extract –make-directories &lt;em&gt;bin&lt;/em&gt; 从一个rpm包运行可执行文件 &lt;br /&gt;
rpm -ivh /usr/src/redhat/RPMS/&lt;code class=&quot;highlighter-rouge&quot;&gt;arch&lt;/code&gt;/package.rpm 从一个rpm源码安装一个构建好的包 &lt;br /&gt;
rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;YUM 软件包升级器&lt;/strong&gt; - （Fedora, RedHat及类似系统） &lt;br /&gt;
yum install package_name 下载并安装一个rpm包 &lt;br /&gt;
yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 &lt;br /&gt;
yum update package_name.rpm 更新当前系统中所有安装的rpm包 &lt;br /&gt;
yum update package_name 更新一个rpm包 &lt;br /&gt;
yum remove package_name 删除一个rpm包 &lt;br /&gt;
yum list 列出当前系统中安装的所有包 &lt;br /&gt;
yum search package_name 在rpm仓库中搜寻软件包 &lt;br /&gt;
yum clean packages 清理rpm缓存删除下载的包 &lt;br /&gt;
yum clean headers 删除所有头文件 &lt;br /&gt;
yum clean all 删除所有缓存的包和头文件 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DEB 包&lt;/strong&gt; (Debian, Ubuntu 以及类似系统) &lt;br /&gt;
dpkg -i package.deb 安装/更新一个 deb 包 &lt;br /&gt;
dpkg -r package_name 从系统删除一个 deb 包 &lt;br /&gt;
dpkg -l 显示系统中所有已经安装的 deb 包 
dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包 &lt;br /&gt;
dpkg -s package_name 获得已经安装在系统中一个特殊包的信息 &lt;br /&gt;
dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表 &lt;br /&gt;
dpkg –contents package.deb 显示尚未安装的一个包所提供的文件列表 &lt;br /&gt;
dpkg -S /bin/ping 确认所给的文件由哪个deb包提供 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;APT 软件工具&lt;/strong&gt; (Debian, Ubuntu 以及类似系统) &lt;br /&gt;
apt-get install package_name 安装/更新一个 deb 包 &lt;br /&gt;
apt-cdrom install package_name 从光盘安装/更新一个 deb 包 &lt;br /&gt;
apt-get update 升级列表中的软件包 &lt;br /&gt;
apt-get upgrade 升级所有已安装的软件 &lt;br /&gt;
apt-get remove package_name 从系统删除一个deb包 &lt;br /&gt;
apt-get check 确认依赖的软件仓库正确 &lt;br /&gt;
apt-get clean 从下载的软件包中清理缓存 &lt;br /&gt;
apt-cache search searched-package 返回包含所要搜索字符串的软件包名称 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;查看文件内容&lt;/strong&gt;&lt;br /&gt;
cat file1 从第一个字节开始正向查看文件的内容 &lt;br /&gt;
tac file1 从最后一行开始反向查看一个文件的内容 &lt;br /&gt;
more file1 查看一个长文件的内容 &lt;br /&gt;
less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作 &lt;br /&gt;
head -2 file1 查看一个文件的前两行 &lt;br /&gt;
tail -2 file1 查看一个文件的最后两行 &lt;br /&gt;
tail -f /var/log/messages 实时查看被添加到一个文件中的内容 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文本处理&lt;/strong&gt; &lt;br /&gt;
cat file1 file2 … | command &amp;lt;&amp;gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT &lt;br /&gt;
cat file1 | command( sed, grep, awk, grep, etc…) &amp;gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中 &lt;br /&gt;
cat file1 | command( sed, grep, awk, grep, etc…) » result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中 &lt;br /&gt;
grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug” &lt;br /&gt;
grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇 &lt;br /&gt;
grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行 &lt;br /&gt;
grep Aug -R /var/log/* 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug” &lt;br /&gt;
sed ‘s/stringa1/stringa2/g’ example.txt 将example.txt文件中的 “string1” 替换成 “string2” &lt;br /&gt;
sed ‘/^$/d’ example.txt 从example.txt文件中删除所有空白行 &lt;br /&gt;
sed ‘/ &lt;em&gt;#/d; /^$/d’ example.txt 从example.txt文件中删除所有注释和空白行 &lt;br /&gt;
echo ‘esempio’ | tr ‘[:lower:]’ ‘[:upper:]’ 合并上下单元格内容 &lt;br /&gt;
sed -e ‘1d’ result.txt 从文件example.txt 中排除第一行 &lt;br /&gt;
sed -n ‘/stringa1/p’ 查看只包含词汇 “string1”的行 &lt;br /&gt;
sed -e ‘s/ *$//’ example.txt 删除每一行最后的空白字符 &lt;br /&gt;
sed -e ‘s/stringa1//g’ example.txt 从文档中只删除词汇 “string1” 并保留剩余全部 &lt;br /&gt;
sed -n ‘1,5p;5q’ example.txt 查看从第一行到第5行内容 &lt;br /&gt;
sed -n ‘5p;5q’ example.txt 查看第5行 &lt;br /&gt;
sed -e ‘s/00&lt;/em&gt;/0/g’ example.txt 用单个零替换多个零 &lt;br /&gt;
cat -n file1 标示文件的行数 &lt;br /&gt;
cat example.txt | awk ‘NR%2==1’ 删除example.txt文件中的所有偶数行 &lt;br /&gt;
echo a b c | awk ‘{print $1}’ 查看一行第一栏 &lt;br /&gt;
echo a b c | awk ‘{print $1,$3}’ 查看一行的第一和第三栏 &lt;br /&gt;
paste file1 file2 合并两个文件或两栏的内容 &lt;br /&gt;
paste -d ‘+’ file1 file2 合并两个文件或两栏的内容，中间用”+”区分 &lt;br /&gt;
sort file1 file2 排序两个文件的内容 &lt;br /&gt;
sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份) &lt;br /&gt;
sort file1 file2 | uniq -u 删除交集，留下其他的行 &lt;br /&gt;
sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件) &lt;br /&gt;
comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容 &lt;br /&gt;
comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容 &lt;br /&gt;
comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;字符设置和文件格式转换&lt;/strong&gt; &lt;br /&gt;
dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX &lt;br /&gt;
unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS &lt;br /&gt;
recode ..HTML &amp;lt; page.txt &amp;gt; page.html 将一个文本文件转换成html &lt;br /&gt;
recode -l | more 显示所有允许的转换格式 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文件系统分析&lt;/strong&gt; &lt;br /&gt;
badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块 &lt;br /&gt;
fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性 &lt;br /&gt;
fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 &lt;br /&gt;
e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 &lt;br /&gt;
e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 &lt;br /&gt;
fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 &lt;br /&gt;
fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性 &lt;br /&gt;
fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 &lt;br /&gt;
dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;初始化一个文件系统&lt;/strong&gt; &lt;br /&gt;
mkfs /dev/hda1 在hda1分区创建一个文件系统 &lt;br /&gt;
mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统 &lt;br /&gt;
mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统 &lt;br /&gt;
mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统 &lt;br /&gt;
fdformat -n /dev/fd0 格式化一个软盘 &lt;br /&gt;
mkswap /dev/hda3 创建一个swap文件系统 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;网络&lt;/strong&gt;&lt;br /&gt;
ifconfig eth0 显示一个以太网卡的配置 &lt;br /&gt;
ifup eth0 启用一个 ‘eth0’ 网络设备 &lt;br /&gt;
ifdown eth0 禁用一个 ‘eth0’ 网络设备 &lt;br /&gt;
ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址 &lt;br /&gt;
ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing) &lt;br /&gt;
dhclient eth0 以dhcp模式启用 ‘eth0’ &lt;br /&gt;
route -n 展开路由表&lt;br /&gt;
route add -net 0/0 gw IP_Gateway 配置默认网关 &lt;br /&gt;
route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 配置静态路由为 ‘192.168.0.0/16’ &lt;br /&gt;
route del 0/0 gw IP_gateway 删除静态路由&lt;br /&gt;
netstat -tup 显示所有活动网络连接和PID &lt;br /&gt;
hostname 显示主机地址&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;转载原处：&lt;a href=&quot;https://www.cnblogs.com/yjd_hycf_space/p/7730690.html&quot; target=&quot;_blank&quot; style=&quot;color:red&quot;&gt;https://www.cnblogs.com/yjd_hycf_space/p/7730690.html&lt;/a&gt;&lt;/p&gt;</content><author><name>路过音乐</name></author><category term="linux" /><summary type="html">常和ubuntu打交道，但是有些命令还是记不住，老是需要去查，现在网上找到一份常用命令和解释，以作参考：</summary></entry><entry><title type="html">基于爬虫的娱乐推荐系统</title><link href="http://localhost:4000/entertain/2018/09/19/entertainv1.html" rel="alternate" type="text/html" title="基于爬虫的娱乐推荐系统" /><published>2018-09-19T00:00:00+08:00</published><updated>2018-09-19T00:00:00+08:00</updated><id>http://localhost:4000/entertain/2018/09/19/entertainv1</id><content type="html" xml:base="http://localhost:4000/entertain/2018/09/19/entertainv1.html">&lt;main&gt;
    &lt;div class=&quot;Inform&quot; style=&quot;float:left;height:500px;width: 550px;&quot;&gt;
        &lt;form id=&quot;datatoser&quot; action=&quot;http://119.29.230.61:7777/DIAproject&quot; method=&quot;post&quot; target=&quot;fram1&quot;&gt;
            &lt;fieldset&gt;
                &lt;legend&gt;欢迎使用娱乐推荐系统 , 当前正在使用： 0 人&lt;/legend&gt;
                &lt;table&gt;
                    &lt;tr&gt;
                        &lt;td&gt;
                            类型
                            &lt;input type=&quot;radio&quot; name='type' value='movie' checked=&quot;checked&quot;&gt;电影
                            &lt;input type=&quot;radio&quot; name='type' value='game'&gt;游戏
                            &lt;input type=&quot;radio&quot; name='type' value='music'&gt;音乐
                            &lt;input type=&quot;radio&quot; name='type' value='TVseriel'&gt;电视剧
                            &lt;input type=&quot;radio&quot; name='type' value='novel'&gt;小说
                        &lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;tr&gt;
                        &lt;td&gt;关键词&lt;input type=&quot;text&quot; name='keywords' placeholder=&quot;以空格分开&quot;&gt;&lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;tr&gt;
                        &lt;td&gt;说明&lt;p&gt;afdfafsaafdafdaffaaafaafa&lt;/p&gt;&lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;tr&gt;
                        &lt;td style='text-align: right'&gt;&lt;input type=&quot;submit&quot; target=&quot;fram1&quot; value=&quot;开始推荐&quot;&gt;&lt;/td&gt;
                    &lt;/tr&gt;
                &lt;/table&gt;
            &lt;/fieldset&gt;
        &lt;/form&gt;

    &lt;/div&gt;
    &lt;div class=&quot;Outform&quot; style=&quot;float:right&quot;&gt;

            &lt;iframe name=&quot;fram1&quot; src=&quot;http://119.29.230.61:7777/DIAproject&quot; height=&quot;450&quot; width=&quot;550&quot; style=&quot;display:inline-block&quot;&gt;&lt;/iframe&gt;
            &lt;form action=&quot;/&quot; method=&quot;POST&quot;&gt;
                &lt;input type=&quot;submit&quot; value=&quot;查看详细&quot;&gt;   &lt;input type=&quot;submit&quot; value=&quot;再次推荐&quot;&gt;
            &lt;/form&gt;
    &lt;/div&gt;

&lt;/main&gt;</content><author><name>路过音乐</name></author><category term="个人项目" /><category term="scrapy" /><category term="推荐算法" /><summary type="html">欢迎使用娱乐推荐系统 , 当前正在使用： 0 人 类型 电影 游戏 音乐 电视剧 小说 关键词 说明afdfafsaafdafdaffaaafaafa</summary></entry><entry><title type="html">创建博客历程（持续更新）</title><link href="http://localhost:4000/myorigion/2018/09/18/createblog.html" rel="alternate" type="text/html" title="创建博客历程（持续更新）" /><published>2018-09-18T00:00:00+08:00</published><updated>2018-09-18T00:00:00+08:00</updated><id>http://localhost:4000/myorigion/2018/09/18/createblog</id><content type="html" xml:base="http://localhost:4000/myorigion/2018/09/18/createblog.html">&lt;h2 id=&quot;创建博客--2018918--&quot;&gt;&lt;strong&gt;&lt;em&gt;创建博客&lt;/em&gt;&lt;/strong&gt;  2018/9/18  &lt;br /&gt;&lt;/h2&gt;
&lt;p&gt;1.在Github上创建新仓库，名字为&lt;strong&gt;[用户名].github.io&lt;/strong&gt;  &lt;br /&gt;
2.了解并使用&lt;a href=&quot;https://www.jekyll.com.cn/&quot;&gt;Jekyll&lt;/a&gt;  &lt;br /&gt;
3.修改模版，进行个性化设置  &lt;br /&gt;
参考链接：&lt;a href=&quot;https://blog.csdn.net/lady_zhou/article/details/52041098&quot; target=&quot;_blank&quot;&gt;
         (https://blog.csdn.net/lady_zhou/article/details/52041098)&lt;/a&gt;                             &lt;br /&gt;
         &lt;a href=&quot;https://blog.csdn.net/lady_zhou/article/details/52041098&quot; target=&quot;_blank&quot;&gt;      (https://blog.csdn.net/u013553529/article/details/54588010)&lt;/a&gt;&lt;br /&gt;
         &lt;a href=&quot;https://blog.csdn.net/lady_zhou/article/details/52041098&quot; target=&quot;_blank&quot;&gt; 
        （https://github.com/xukimseven/HardCandy-Jekyll)&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>路过音乐</name></author><category term="Github" /><category term="blog" /><summary type="html">创建博客 2018/9/18 1.在Github上创建新仓库，名字为[用户名].github.io 2.了解并使用Jekyll 3.修改模版，进行个性化设置 参考链接： (https://blog.csdn.net/lady_zhou/article/details/52041098) (https://blog.csdn.net/u013553529/article/details/54588010) （https://github.com/xukimseven/HardCandy-Jekyll)</summary></entry></feed>